// Mocks generated by Mockito 5.4.3 from annotations
// in clean_architecture_getx/test/features/todo/data/repositories/todo_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:clean_architecture_getx/features/todo/data/datasources/todo_remote_data_source.dart'
    as _i2;
import 'package:clean_architecture_getx/features/todo/data/models/todo.dart'
    as _i4;
import 'package:clean_architecture_getx/features/todo/domain/entities/todo_entity.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TodoRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRemoteDataSource extends _i1.Mock
    implements _i2.TodoRemoteDataSource {
  MockTodoRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ToDo>> getTodos(
    int? userId, {
    _i5.TodoStatus? status,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [userId],
          {#status: status},
        ),
        returnValue: _i3.Future<List<_i4.ToDo>>.value(<_i4.ToDo>[]),
      ) as _i3.Future<List<_i4.ToDo>>);

  @override
  _i3.Future<bool> createTodo(_i4.ToDo? todo) => (super.noSuchMethod(
        Invocation.method(
          #createTodo,
          [todo],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updateTodo(_i4.ToDo? todo) => (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [todo],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteTodo(_i4.ToDo? todo) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [todo],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
