// Mocks generated by Mockito 5.4.3 from annotations
// in clean_architecture_getx/test/features/post/data/repositories/post_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:clean_architecture_getx/features/post/data/datasources/post_remote_data_source.dart'
    as _i2;
import 'package:clean_architecture_getx/features/post/data/models/post.dart'
    as _i4;
import 'package:clean_architecture_getx/features/user/data/models/user.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PostRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRemoteDataSource extends _i1.Mock
    implements _i2.PostRemoteDataSource {
  MockPostRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Post>> getUsers(_i5.User? user) => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [user],
        ),
        returnValue: _i3.Future<List<_i4.Post>>.value(<_i4.Post>[]),
      ) as _i3.Future<List<_i4.Post>>);

  @override
  _i3.Future<bool> createPost(_i4.Post? post) => (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [post],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updatePost(_i4.Post? post) => (super.noSuchMethod(
        Invocation.method(
          #updatePost,
          [post],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deletePost(_i4.Post? post) => (super.noSuchMethod(
        Invocation.method(
          #deletePost,
          [post],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
